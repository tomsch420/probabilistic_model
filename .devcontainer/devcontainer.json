{
    "name": "Probabilistic Model Development",
    "dockerFile": "Dockerfile",
    "context": "..",
    
    // Set *default* container specific settings.json values on container create.
    "settings": {
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.formatting.provider": "black",
        "python.formatting.blackPath": "/usr/local/bin/black",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": true
        },
        "python.linting.mypyEnabled": true,
        "python.testing.pytestEnabled": true,
        "python.testing.nosetestsEnabled": false,
        "python.testing.unittestEnabled": false,
        "python.testing.pytestArgs": [
            "test"
        ]
    },
    
    // Add the IDs of extensions you want installed when the container is created.
    "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.black-formatter",
        "ms-python.isort",
        "ms-python.mypy-type-checker",
        "njpwerner.autodocstring",
        "ms-toolsai.jupyter",
        "ms-azuretools.vscode-docker"
    ],
    
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    "forwardPorts": [
        8888  // For Jupyter notebooks
    ],
    
    // Use 'postCreateCommand' to run commands after the container is created.
    "postCreateCommand": "pip install -e .",
    
    // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
    "remoteUser": "vscode",
    
    // Mount the source code into the container
    "mounts": [
        "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached"
    ],
    
    // Set environment variables
    "remoteEnv": {
        "PYTHONPATH": "${containerWorkspaceFolder}/src:${containerEnv:PYTHONPATH}"
    }
}